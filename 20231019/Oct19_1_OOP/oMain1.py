'''
Created on 2023. 10. 19.

@author: ckd39
'''
from random import randint # random이라는 모듈 내에서, randint라는 함수를 가져온 것.

# -*- coding:utf-8 -*-

randint # 이거 자동완성 시키면 위의 from random ~~~~구문이 자동으로 추가된다.

#패키지에 잇는 Class를 불러오기.
#4가지 방법이 있다.

#1)
#import animal.pet # import 패키지명.모듈명 => 이 모듈에 사용 가능한 상태로 불러온다.
                  # pet.py의 소스를 여기로 들여오는 것과 같다.
                  
#d = animal.pet.Dog("댕댕이", 7)
#d.printInfo()
####################################################################
#2)
#import animal.pet as ap # import 패키지명.모듈명 as 별명 형식.
                        # 이후 별명.클래스명으로 접근 가능.
#d = ap.Dog("멈멈미", 8)
#d.printInfo()
####################################################################
#3)
#from animal.pet import Dog # from 패키지명.모듈명 import 클래스명
                                  # 특정 모듈의 패키지만 딱 가져오는듯. 위 randint와 동일

#d = Dog("댕댕쓰", 3)
#d.printInfo()
#######################################################################
#4) 위 3번에 as 별명까지 합친 형태. 별명으로 접근 가능
#from animal.pet import Dog as dd
#d = dd("댕댕E", 1)
#d.printInfo()
#######################################################################

#Java는 전세계적으로 많이 사용되며, 본인의 작업 결과를 공유(.jar 형태로)하는 문화가 있다. Maven에 공유한다.
#클래스 명의 경우 얼마든지 중복이 될 수 있었으며, 이 경우 분별을 위한 수단이 package이다.
#그래서 클래스명은 겹쳐도, 패키지명은 겹치지 않게 하는 것이 관례이다. 우리 패키지명 짓는 양식 생각해보기.
#예시) com.회사명.프로그램명.패키지명
#패키지 내 클래스를 사용하기 위해서는 패키지명.클래스명 이렇게 사용했으나, 특정 조건에서는 패키지명을 생략했다.
#해당 조건 : 1) 같은 패키지 or java.lang소속 or import해버렸을 경우
#import 예시) 본래 java.util.Random 이래야되지만, import시키면 Random만으로 접근 가능.

#파이썬도 세계적으로 많이 사용되고, 본인의 작업 결과를 공유하는 문화가 있다. pip에 공유한다.
#그래서 클래스명도 또 중복되며, 분별을 위한 수단 또한 package이다.
#다만, 파이썬에서는 패키지명을 짓는 특별한 양식이 없다.
#그래서, 패키지명까지 겹쳐버릴 경우 달리 방법이 없다...
#또한, 클래스를 패키지에 꼭 넣으라는 법도 없다. 자유롭구먼.
#만약 다른 파일(모듈)을 불러오는 경우, 자바와 다르게 반드시 import를 해야 한다.
######################################################################
import animal.pet as ap

class Dog:
    def punch(self):
        print("댕 댕 펀 치")

d = ap.Dog("댕댕2", 1) # 이게 import해온 클래스. ap라는 별명을 사용한 것이 다르다.
d.printInfo()

d2= Dog() # 이게 위에서 선언한 클래스이지만, 아무 것도 명시되어있지 않아 헷갈릴 여지가 있다.
          # 이럴 경우(클래스 명이 중복되는 경우), 가장 가까운 걸로 판정해준다.
d2.punch()
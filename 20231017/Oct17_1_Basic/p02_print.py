'''
Created on 2023. 10. 17.

@author: ckd39
'''

#아래는 print 모듈에 적기.
# Java vs Python.
# Java : 컴퓨터를 효율적으로 활용할 수 있다. 규칙의 언어이며, 완벽한 객체지향 언어라고들 한다.
# 생략된 내용이 없어 명확하고, 혼란을 주지 않는 코드를 사용한다. 그래서 그만큼 길어지기도 한다.

# Python : 컴퓨터보단 사람이 쓰기 편하게 만들어졌다. 자유의 언어이며, 하이브리드한 객체지향이라고들 한다.
# 코드가 짧다는 장점이 있으나, 그렇기 때문에 역으로 길어질 경우 헷갈릴 여지가 생긴다.

#-*- coding:utf-8 -*-

#파이썬에서의 출력함수 print는 줄내림 기능을 포함하는 것 같다.
print('파이썬 진입')
print('화나는 화요일')

#print에도 구분자(seperator)가 있다. ,로 구분하며 각 구분마다 띄어쓰기가 들어간다.
#그리고, 괄호 안에서 sep 속성값을 통해 추가로 줄 수도 있다.
print('내','일','수','요','일', sep=' ')
print('ckd3935', 'naver.com', sep= '@')
print('010', '5532', '3935', sep = '-')

#print가 끝날 때 지금 자동적으로 줄내림이 적용되고 있다.
#이건 기본적으로 속성으로 end = 'ln'이 적용되고 있어서 그렇다.
#end 속성을 새로 지정해주면, 줄내림 대신 지정한 문자가 적용된다.
#아래 print 참조. 새 속성으로 띄어쓰기를 지정하자, print 끝에 줄내림 대신 띄어쓰기가 적용된다.

print('파이썬이', end = ' ')
print('본격적으로', end = ' ')
print('시작되었습니다.', end = ' ')
print('')

# 출력 형식(format) - print 내에 원하는 값 집어넣기.
# 먼저, 순서대로 값을 집어넣기.
print('{} and {}'.format('1번', '2번'))
# 그 다음, 인덱스를 지정하여 값을 집어넣기.
print('{1} and {0} and {0}'.format('1번', '2번'))
# 그 다다음, 변수를 지정하여 값을 집어넣기.
print('{p1} is {p2}'.format(p1 = 'Life', p2 = 'Egg'))

# Java에서의 % formating(%d, %f, %s) 사용하기.
# Java예시 : System.out.println("%d", 123);

#, 대신 %를 사용한다.
print('%d' % 123)
print('%.2f' % 25.568)

#10이라는 값을 0번째에, 11.11111이라는 값을 1번쨰에 소수점 2자리까지만 출력해보기.
print('{0} and {1}'.format('%d' % 10, '%.2f' % 11.11111))
#아래는 새로운 방법. 인덱스 지정할 때 포맷형식을 같이 지정하기.
print('{0:d}, {1:.2f}'.format(10, 11.11111))
